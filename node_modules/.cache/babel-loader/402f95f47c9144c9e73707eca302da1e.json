{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { projectFirestore, ProjectFirestore } from '../firebase/config';\n\nconst useFirestore = collection => {\n  _s();\n\n  const [docs, setDocs] = useState([]);\n  useEffect(() => {\n    const unsub = projectFirestore.collection(collection).orderBy('createdAt', 'desc').onSnapshot(snap => {\n      let documents = [];\n      snap.forEach(doc => {\n        documents.push({ ...doc.data,\n          id: doc.id\n        });\n      });\n      setDocs(documents);\n    });\n    return () => unsub();\n  }, [collection]);\n};\n\n_s(useFirestore, \"+T0lE56vJ9KU8atjOm2u+g1P1HQ=\");\n\nexport default useFirestore;","map":{"version":3,"sources":["/Users/parth/Documents/GitHub/memoryGram/src/hooks/useFirestore.js"],"names":["React","useState","useEffect","projectFirestore","ProjectFirestore","useFirestore","collection","docs","setDocs","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,oBAAnD;;AAEA,MAAMC,YAAY,GAAIC,UAAD,IAAgB;AAAA;;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,KAAK,GAAGN,gBAAgB,CAACG,UAAjB,CAA4BA,UAA5B,EACTI,OADS,CACD,WADC,EACY,MADZ,EAETC,UAFS,CAEEC,IAAI,IAAI;AAChB,UAAIC,SAAS,GAAG,EAAhB;AACAD,MAAAA,IAAI,CAACE,OAAL,CAAaC,GAAG,IAAI;AAChBF,QAAAA,SAAS,CAACG,IAAV,CAAe,EAAE,GAAGD,GAAG,CAACE,IAAT;AAAeC,UAAAA,EAAE,EAAEH,GAAG,CAACG;AAAvB,SAAf;AACH,OAFD;AAGAV,MAAAA,OAAO,CAACK,SAAD,CAAP;AACH,KARS,CAAd;AASA,WAAO,MAAMJ,KAAK,EAAlB;AACH,GAXQ,EAWN,CAACH,UAAD,CAXM,CAAT;AAaH,CAhBD;;GAAMD,Y;;AAkBN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { projectFirestore, ProjectFirestore } from '../firebase/config'\n\nconst useFirestore = (collection) => {\n    const [docs, setDocs] = useState([]);\n\n    useEffect(() => {\n        const unsub = projectFirestore.collection(collection)\n            .orderBy('createdAt', 'desc')\n            .onSnapshot(snap => {\n                let documents = [];\n                snap.forEach(doc => {\n                    documents.push({ ...doc.data, id: doc.id });\n                })\n                setDocs(documents);\n            });\n        return () => unsub();\n    }, [collection])\n\n}\n\nexport default useFirestore\n"]},"metadata":{},"sourceType":"module"}