{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport projectStorage from '../firebase/config';\n\nconst useStorage = file => {\n  _s();\n\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n  useEffect(() => {\n    //create reference where image urls will be stored\n    const storageRef = projectStorage.ref(file.name); //will put the file in the storage when user uploads\n\n    storageRef.put(file).on(\"state_change\", snap => {\n      //create percentage variable \n      let percentage = snap.bytesTranferred / snap.totalBytes * 100;\n      setProgress(percentage);\n    }, err => {\n      setError(err);\n    }, async () => {\n      const url = await storageRef.gerDownloadURL();\n      setUrl(url);\n    });\n  }, [file]);\n  return {\n    progress,\n    error,\n    url\n  };\n};\n\n_s(useStorage, \"xn2AiAzche7NzWswJ7VS1PhvjkU=\");\n\nexport default useStorage;","map":{"version":3,"sources":["/Users/parth/Documents/GitHub/memoryGram/src/hooks/useStorage.js"],"names":["useState","useEffect","projectStorage","useStorage","file","progress","setProgress","error","setError","url","setUrl","storageRef","ref","name","put","on","snap","percentage","bytesTranferred","totalBytes","err","gerDownloadURL"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,cAAP,MAA2B,oBAA3B;;AAEA,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAAA;;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,IAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,UAAMU,UAAU,GAAGT,cAAc,CAACU,GAAf,CAAmBR,IAAI,CAACS,IAAxB,CAAnB,CAFY,CAIZ;;AACAF,IAAAA,UAAU,CAACG,GAAX,CAAeV,IAAf,EAAqBW,EAArB,CAAwB,cAAxB,EAAyCC,IAAD,IAAU;AAC9C;AACA,UAAIC,UAAU,GAAID,IAAI,CAACE,eAAL,GAAuBF,IAAI,CAACG,UAA7B,GAA2C,GAA5D;AACAb,MAAAA,WAAW,CAACW,UAAD,CAAX;AACH,KAJD,EAIGG,GAAG,IAAI;AACNZ,MAAAA,QAAQ,CAACY,GAAD,CAAR;AACH,KAND,EAMG,YAAY;AACX,YAAMX,GAAG,GAAG,MAAME,UAAU,CAACU,cAAX,EAAlB;AACAX,MAAAA,MAAM,CAACD,GAAD,CAAN;AACH,KATD;AAYH,GAjBQ,EAiBN,CAACL,IAAD,CAjBM,CAAT;AAmBA,SAAO;AAAEC,IAAAA,QAAF;AAAYE,IAAAA,KAAZ;AAAmBE,IAAAA;AAAnB,GAAP;AACH,CAzBD;;GAAMN,U;;AA2BN,eAAeA,UAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport projectStorage from '../firebase/config'\n\nconst useStorage = (file) => {\n    const [progress, setProgress] = useState(0);\n    const [error, setError] = useState(null);\n    const [url, setUrl] = useState(null);\n\n    useEffect(() => {\n        //create reference where image urls will be stored\n        const storageRef = projectStorage.ref(file.name);\n\n        //will put the file in the storage when user uploads\n        storageRef.put(file).on(\"state_change\", (snap) => {\n            //create percentage variable \n            let percentage = (snap.bytesTranferred / snap.totalBytes) * 100;\n            setProgress(percentage);\n        }, err => {\n            setError(err);\n        }, async () => {\n            const url = await storageRef.gerDownloadURL();\n            setUrl(url)\n        })\n\n\n    }, [file])\n\n    return { progress, error, url }\n}\n\nexport default useStorage;\n"]},"metadata":{},"sourceType":"module"}